syntax = "proto3";

import "card.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "internal/app/grpc";

package  grpc;

service DeckService {
  rpc CreateDeck(CreateDeckRequest) returns (DeckResponse) {
      option (google.api.http) = {
          post: "/v1/decks"
          body: "*"
      };
  }
  rpc GetDeckById(GetDeckByIdRequest) returns (DeckWithCardsResponse) {
      option (google.api.http) = {
          get: "/v1/decks/{id}"
      };
  }
  rpc UpdateDeck(UpdateDeckRequest) returns (DeckResponse) {
      option (google.api.http) = {
          put: "/v1/decks/{id}"
          body: "*"
      };
  }
  rpc DeleteDeck(DeleteDeckRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
          delete: "/v1/decks/{id}"
      };
  }
}

message CreateDeckRequest {
    string title = 1;
    string description = 2;
    string author = 3;
}

message GetDeckByIdRequest {
  int64 id = 1;
}

message UpdateDeckRequest {
  int64 id = 1;
  string title = 2;
  string description = 3;
  string author = 4;
}

message DeleteDeckRequest {
  int64 id = 1;
}

message DeckResponse {
  int64 id = 1;
  string title = 2;
  string description = 3;
  string author = 4;
  string created_at = 5;
}

message GetActualCardInDeckRequest {
  int64 id = 1;
  repeated int64 card_id = 2;
}

message DeckWithCardsResponse {
  DeckResponse deck = 1;
  repeated CardResponse cards = 2;
}